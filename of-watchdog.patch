diff --git a/of-watchdog/Dockerfile b/of-watchdog/Dockerfile
index e3aadef6..109ea736 100644
--- a/of-watchdog/Dockerfile
+++ b/of-watchdog/Dockerfile
@@ -6,6 +6,7 @@ ARG GOPROXY=""
 
 WORKDIR /go/src/github.com/openfaas-incubator/of-watchdog
 
+COPY accesscontrol       accesscontrol
 COPY vendor              vendor
 COPY config              config
 COPY executor            executor
diff --git a/of-watchdog/build.sh b/of-watchdog/build.sh
index 749630d2..57cbb963 100755
--- a/of-watchdog/build.sh
+++ b/of-watchdog/build.sh
@@ -1,5 +1,8 @@
 #!/bin/bash
 
+cp -R ../accesscontrol/ ./accesscontrol/
+rm ./accesscontrol/*_gateway.go
+
 if [ ! "$http_proxy" = "" ]
 then
     docker build --no-cache --build-arg "https_proxy=$https_proxy" --build-arg "http_proxy=$http_proxy" -t openfaas/of-watchdog:build .
@@ -22,3 +25,5 @@ docker cp buildoutput:/go/src/github.com/openfaas-incubator/of-watchdog/of-watch
 docker cp buildoutput:/go/src/github.com/openfaas-incubator/of-watchdog/of-watchdog.exe ./of-watchdog.exe
 
 docker rm buildoutput
+
+rm -rf ./accesscontrol
diff --git a/of-watchdog/config/config.go b/of-watchdog/config/config.go
index 214beae6..f38391a1 100644
--- a/of-watchdog/config/config.go
+++ b/of-watchdog/config/config.go
@@ -30,6 +30,9 @@ type WatchdogConfig struct {
 	// MetricsPort TCP port on which to serve HTTP Prometheus metrics
 	MetricsPort int
 
+	// ProxyPort TCP port on which to server gateway proxy
+	ProxyPort int
+
 	// MaxInflight limits the number of simultaneous
 	// requests that the watchdog allows concurrently.
 	// Any request which exceeds this limit will
@@ -98,6 +101,7 @@ func New(env []string) WatchdogConfig {
 		UpstreamURL:      upstreamURL,
 		BufferHTTPBody:   getBools(envMap, "buffer_http", "http_buffer_req_body"),
 		MetricsPort:      8081,
+		ProxyPort:        8082,
 		MaxInflight:      getInt(envMap, "max_inflight", 0),
 	}
 
diff --git a/of-watchdog/main.go b/of-watchdog/main.go
index 036372d0..48663d1b 100644
--- a/of-watchdog/main.go
+++ b/of-watchdog/main.go
@@ -16,6 +16,7 @@ import (
 	"syscall"
 	"time"
 
+	"github.com/openfaas-incubator/of-watchdog/accesscontrol"
 	"github.com/openfaas-incubator/of-watchdog/config"
 	"github.com/openfaas-incubator/of-watchdog/executor"
 	"github.com/openfaas-incubator/of-watchdog/metrics"
@@ -56,6 +57,8 @@ func main() {
 
 	requestHandler := buildRequestHandler(watchdogConfig)
 
+	requestHandler = accesscontrol.Wrap(requestHandler)
+
 	log.Printf("OperationalMode: %s\n", config.WatchdogMode(watchdogConfig.OperationalMode))
 
 	httpMetrics := metrics.NewHttp()
@@ -69,6 +72,9 @@ func main() {
 
 	go metricsServer.Serve(cancel)
 
+	proxyServer := accesscontrol.NewProxyServer(watchdogConfig.ProxyPort)
+	go proxyServer.Serve()
+
 	shutdownTimeout := watchdogConfig.HTTPWriteTimeout
 	s := &http.Server{
 		Addr:           fmt.Sprintf(":%d", watchdogConfig.TCPPort),
